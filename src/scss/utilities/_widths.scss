/* ==========================================================================
   #Widths
   ========================================================================== */

/* stylelint-disable declaration-no-important */
@mixin _build-widths($columns, $breakpoint: null) {

  // Loop through the number of columns for each denominator of our fractions
  @each $denominator in $columns {

    // Begin creating a numerator for our fraction up until we hit the
    // denominator
    @for $numerator from 1 through $denominator {

      // Build a class in the format `.u-<numerator>/<denominator>[@<breakpoint>]`
      .u-#{$numerator}\/#{$denominator}#{$breakpoint} {
        width: ($numerator / $denominator) * 100% !important;
      }

      /**
       * 1. Defensively reset any leftover or conflicting `left`/`right` values.
       */

      // Build a class in the format `.u-<numerator>/<denominator>[@<breakpoint>]`.
      .u-push-#{$numerator}\/#{$denominator}#{$breakpoint} {
        position: relative;
        right: auto; /* [1] */
        left: ($numerator / $denominator) * 100% !important;
      }

      // Build a class in the format `.u-pull-<numerator>/<denominator>[@<breakpoint>]`.
      .u-pull-#{$numerator}\/#{$denominator}#{$breakpoint} {
        position: relative;
        right: ($numerator / $denominator) * 100% !important;
        left: auto; /* [1] */
      }
    }
  }
}
/* stylelint-enable declaration-no-important */

// Generate our regular, non-responsive classes.
// classes will be as fractions of 12. eg: 3/12 for a 4 column layout
@include _build-widths(12);


// Generate our responsive classes by looping over the series of breakpoints
// held by Sass MQ.
@each $alias, $bp in $mq-breakpoints {
  @include mq($from: $alias) {
    @include _build-widths(12, \@#{$alias});
  }
}

/* ==========================================================================
   #Definitions
   ========================================================================== */

/* Contents
    - Global vars..........General things we want to keep consistent.
    - Typography...........Our most basic and global typographic settings.
    - Colors...............Load up a map with our color definitions.
    - Assets...............Asset paths for fonts, sprites, etc.
    - Responsive...........Define our breakpoint sizes and what theyâ€™re called.
    - Sizing...............Settings pertaining to various UI sizes.
    - Forms................Some variables to keep form elements consistent.
   ========================================================================== */

/* Global vars
   ========================================================================== */
$border-radius: 6px;
$box-shadow: 0 2px 5px rgba(#333, 0.2);
$golden-ratio: 1.61803398875; // the golden ratio (handy for quick proportions)

/* Typography
   ========================================================================== */
$global-font-size: 22px !default;
$global-line-height: 27px !default;

$global-font-size-h1: 80px !default;
$global-font-size-h2: 40px !default;
$global-font-size-h3: 36px !default;
$global-font-size-h4: 26px !default;
$global-font-size-h5: 18px !default;
$global-font-size-h6: 16px !default;

$global-font-size-h1-mobile: $global-font-size-h1 / 1.2 !default;
$global-font-size-h2-mobile: $global-font-size-h2 / 1.2 !default;
$global-font-size-h3-mobile: $global-font-size-h3 / 1.2 !default;
$global-font-size-h4-mobile: $global-font-size-h4 / 1.2 !default;
$global-font-size-h5-mobile: $global-font-size-h5 / 1.2 !default;
$global-font-size-h6-mobile: $global-font-size-h6 / 1.2 !default;


/* Colors
   ========================================================================== */

/**
 * 1. Define main colors.
 * 2. Create variations of main colors.
 * 3. Make a list of reusable colors to use with the color function `color('')`.
 * 4. Create some secondary definitions that can be reused
 */

$color-primary: #5f2a2b;
$color-secondary: #b68150;
$color-accent: #245e71;
$color-success: #8bc34a;
$color-error: #f44336;

$shade-primary-1: mix($color-primary, #fff, 16.66666667%);
$shade-primary-2: mix($color-primary, #fff, 33.33333333%);
$shade-primary-3: mix($color-primary, #fff, 50%);
$shade-primary-4: mix($color-primary, #fff, 66.66666667%);
$shade-primary-5: mix($color-primary, #fff, 83.33333333%);

$shade-secondary-1: mix($color-secondary, #fff, 16.66666667%);
$shade-secondary-2: mix($color-secondary, #fff, 33.33333333%);
$shade-secondary-3: mix($color-secondary, #fff, 50%);
$shade-secondary-4: mix($color-secondary, #fff, 66.66666667%);
$shade-secondary-5: mix($color-secondary, #fff, 83.33333333%);

$shade-accent-1: mix($color-accent, #fff, 16.66666667%);
$shade-accent-2: mix($color-accent, #fff, 33.33333333%);
$shade-accent-3: mix($color-accent, #fff, 50%);
$shade-accent-4: mix($color-accent, #fff, 66.66666667%);
$shade-accent-5: mix($color-accent, #fff, 83.33333333%);

$shade-success-1: mix($color-success, #fff, 16.66666667%);
$shade-success-2: mix($color-success, #fff, 33.33333333%);
$shade-success-3: mix($color-success, #fff, 50%);
$shade-success-4: mix($color-success, #fff, 66.66666667%);
$shade-success-5: mix($color-success, #fff, 83.33333333%);

$shade-error-1: mix($color-error, #fff, 16.66666667%);
$shade-error-2: mix($color-error, #fff, 33.33333333%);
$shade-error-3: mix($color-error, #fff, 50%);
$shade-error-4: mix($color-error, #fff, 66.66666667%);
$shade-error-5: mix($color-error, #fff, 83.33333333%);

$shade-neutral-1: #f2f2f2;
$shade-neutral-2: #e8e9e9;
$shade-neutral-3: #d1d3d4;
$shade-neutral-4: #babdbf;
$shade-neutral-5: #808488;
$shade-neutral-6: #666a6d;
$shade-neutral-7: #4d5052;
$shade-neutral-8: #232121;

$color-white: #fff;
$color-gray: #999;
$color-light-gray: #ddd;
$color-black: #232121;

/* ================================================ */

$color-brand: #5f2a2b; /* [1] */
$color-brand-20: shade($color-brand, 20%); /* [2] */
$color-brand-40: shade($color-brand, 40%); /* [2] */
$color-brand-60: shade($color-brand, 60%); /* [2] */
$color-brand-80: shade($color-brand, 80%); /* [2] */



$color-black: #232121; /* [1] */
$color-black-20: tint($color-black, 20%); /* [2] */
$color-black-40: tint($color-black, 40%); /* [2] */
$color-black-60: tint($color-black, 60%); /* [2] */
$color-black-80: tint($color-black, 80%); /* [2] */


$global-colors: (
  'error': #da291c, /* [3] */
  'success': #78be20, /* [3] */
  'warning': #fae100, /* [3] */
  'links': $color-brand /* [3] */
) !default;

$color-text: $color-black; /* [4] */
$color-text-bg: $color-white; /* [4] */

/* Assets
   ========================================================================== */
$font-path: '../fonts/' !default;
$image-path: '../img/' !default;


/* Responsive
   ========================================================================== */
$mq-breakpoints: (
  'sm': 480px,
  'md': 720px,
  'lg': 1024px,
  'xl': 1800px
) !default;

$retina: (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 120dpi), (min-resolution: 1.3dppx);


/* Sizing
   ========================================================================== */
$global-spacing-unit: 20px !default;

$global-border-heavy: 15px !default;
$global-border-mid: 10px !default;
$global-border-light: 1px !default;


/* Forms
   ========================================================================== */
$color-form-label: color('black');


///////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//                                                                            \\
//                               W A R N I N G                                \\
//                                                                            \\
///////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

// Do not modify anything below this point: this is framework-only reassignment.
$global-spacing-unit-tiny: round(0.25 * $global-spacing-unit);
$global-spacing-unit-small: round(0.5 * $global-spacing-unit);
$global-spacing-unit-large: round(2 * $global-spacing-unit);
